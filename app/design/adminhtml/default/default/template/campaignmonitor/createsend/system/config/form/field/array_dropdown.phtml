<?php
/**
 * Campaign Monitor Magento Extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you are unable to obtain it through the world-wide-web, please
 * send an email to license@magento.com and you will be sent a copy.
 *
 * @package Campaignmonitor_Createsend
 * @copyright Copyright (c) 2015 Campaign Monitor (https://www.campaignmonitor.com/)
 * @license http://opensource.org/licenses/osl-3.0.php Open Software License (OSL 3.0)
 */
?>

<?php
$_htmlId = $this->getHtmlId() ? $this->getHtmlId() : '_' . uniqid();

$_colspan = 2;
if (!$this->_addAfter) {
    $_colspan -= 1;
}
$_colspan = $_colspan > 1 ? 'colspan="' . $_colspan . '"' : '';
?>

<div class="grid" id="grid<?php echo $_htmlId; ?>">
    <table cellpadding="0" cellspacing="0" class="border">
        <tbody>

            <tr class="headings" id="headings<?php echo $_htmlId; ?>">
            <?php foreach ($this->_columns as $columnName => $column): ?>
                <th><?php echo $column['label']; ?></th>
            <?php endforeach; ?>
                <th <?php echo $_colspan; ?>></th>
            </tr>

            <tr id="addRow<?php echo $_htmlId; ?>">
                <td colspan="<?php echo count($this->_columns); ?>"></td>
                <td <?php echo $_colspan; ?>>
                    <button style="" onclick="" class="scalable add" type="button" id="addToEndBtn<?php echo $_htmlId; ?>">
                        <span><span><span><?php echo $this->_addButtonLabel; ?></span></span></span>
                    </button>
                </td>
            </tr>

        </tbody>
    </table>
    <input type="hidden" name="<?php echo $this->getElement()->getName(); ?>[__empty]" value="" />
</div>
<div id="empty<?php echo $_htmlId; ?>">
    <button style="" onclick="" class="scalable add" type="button" id="emptyAddBtn<?php echo $_htmlId; ?>">
        <span><span><span><?php echo $this->_addButtonLabel; ?></span></span></span>
    </button>
</div>

<script type="text/javascript">
// <!--
// create row creator
var arrayRow<?php echo $_htmlId; ?> = {
    // define row prototypeJS template
    template : new Template(
        '<tr id="<?php echo $_htmlId; ?>-#{_id}">'
<?php foreach ($this->_columns as $columnName => $column):?>
            +'<td class="#{_id}-<?php echo $columnName?>">'
                +'<?php echo $this->_renderCellTemplate($columnName); ?>'
            +'</td>'
<?php endforeach; ?>
<?php if ($this->_addAfter): ?>
            +'<td><button onclick="" class="scalable add" type="button" id="addAfterBtn#{_id}"><span><span><span><?php echo Mage::helper('adminhtml')->__('Add after') ?></span></span></span></button></td>'
<?php endif; ?>
            +'<td><button onclick="arrayRow<?php echo $_htmlId ?>.del(\'#{_id}\')" class="scalable delete" type="button"><span><span><span><?php echo Mage::helper('adminhtml')->__('Delete') ?></span></span></span></button></td>'
        +'</tr>'
    ),

    rowsCount : 0,

    add : function(templateData, insertAfterId)
    {
        var dataProvided = true;

        // generate default template data
        if ('' == templateData) {
            dataProvided = false;

            var d = new Date();
            var templateData = {
<?php foreach ($this->_columns as $columnName => $column): ?>
                <?php echo $columnName ?> : '',
<?php endforeach; ?>
                _id : '_' + d.getTime() + '_' + d.getMilliseconds()
            };
        }

        if ('' == insertAfterId) {
            // insert before last row
            new Insertion.Before(
                $('addRow<?php echo $_htmlId ?>'),
                this.template.evaluate(templateData)
            );
        } else {
            // insert after specified row
            new Insertion.After(
                $(insertAfterId),
                this.template.evaluate(templateData)
            );
        }

        <?php // Following only works with a single column ?>
        if (!dataProvided) {
            // Get array of values which have already been selected
            var values = [];
            $('grid<?php echo $_htmlId; ?>').select('select').each(function(e) {
                values.push($F(e));
            });

            // Remove any values which have already been selected from the dropdown
            var options = $$('td.' + templateData._id + '-' + 'magento' + ' option')
            for (var i = 0; i < options.length; ++i) {
                var option = options[i]
                var value = option.getAttribute('value');

                for (var j = 0; j < values.length; ++j) {
                    if (value == values[j]) {
                        option.parentNode.removeChild(option);
                        break;
                    }
                }
            }
        }

        // set the selected drop-down list item
<?php foreach ($this->_columns as $columnName => $column): ?>
        var options = $$('td.' + templateData._id + '-' + '<?php echo $columnName; ?>' + ' option')
        for (var index = 0; index < options.length; ++index) {
            var option = options[index]
            if (option.getAttribute('value') == templateData.<?php echo $columnName; ?>) {
                option.selected = true
            }
        }
<?php endforeach; ?>

<?php if ($this->_addAfter): ?>
        Event.observe('addAfterBtn' + templateData._id, 'click', this.add.bind(this, '', templateData._id));
<?php endif; ?>

        this.rowsCount += 1;
    },

    del : function(rowId)
    {
        $('<?php echo $_htmlId ?>' + '-' + rowId).remove();
        this.rowsCount -= 1;
        if (0 == this.rowsCount) {
            this.showButtonOnly();
        }
    },

    showButtonOnly : function()
    {
        $('grid<?php echo $_htmlId ?>').hide();
        $('empty<?php echo $_htmlId ?>').show();
    }
}

// bind add action to "Add" button in last row
Event.observe('addToEndBtn<?php echo $_htmlId; ?>', 'click', arrayRow<?php echo $_htmlId; ?>.add.bind(arrayRow<?php echo $_htmlId; ?>, '', ''));

// add existing rows
<?php
$_addAfterId = "headings{$_htmlId}";
foreach ($this->getArrayRows() as $_rowId => $_row) {
    echo "arrayRow{$_htmlId}.add(" . $_row->toJson() . ", '{$_addAfterId}');\n";
    $_addAfterId = "{$_htmlId}-{$_rowId}";
}
?>

// initialize standalone button
$('empty<?php echo $_htmlId; ?>').hide();
Event.observe('emptyAddBtn<?php echo $_htmlId ?>', 'click', function () {
    $('grid<?php echo $_htmlId; ?>').show();
    $('empty<?php echo $_htmlId; ?>').hide();
    arrayRow<?php echo $_htmlId; ?>.add('', '');
});

// if no rows, hide grid and show button only
<?php if (!$this->getArrayRows()):?>
arrayRow<?php echo $_htmlId; ?>.showButtonOnly();
<?php endif;?>

// toggle the grid, if element is disabled (depending on scope)
<?php if ($this->getElement()->getDisabled()): ?>
toggleValueElements({checked:true}, $('grid<?php echo $_htmlId; ?>').parentNode);
<?php endif;?>
// -->
</script>
